version: 2.1

orbs:
  coupling-orb:
    orbs:
      browser-tools: circleci/browser-tools@1.1.0
    executors:
      standard:
        machine:
          image: ubuntu-2004:202104-01
        environment:
          COUPLING_IN_MEMORY: "true"
          SKIP_MONGO_TESTS: "true"
    commands:
      setup:
        steps:
          - run: |
              set +e
              curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.5/install.sh | bash
              export NVM_DIR="/opt/circleci/.nvm"
              [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
              nvm install node
              nvm alias default node

              echo 'export NVM_DIR="/opt/circleci/.nvm"' >> $BASH_ENV
              echo "[ -s \"$NVM_DIR/nvm.sh\" ] && . \"$NVM_DIR/nvm.sh\"" >> $BASH_ENV
          - browser-tools/install-chrome
          - browser-tools/install-chromedriver
          - run: "./gradlew kotlinNodeJsSetup"
          - run: "./gradlew packageJson testPackageJson jsEndpointTestPackageJson kotlinNpmInstall --no-daemon"
          - run: docker-compose up -d dynamo
      collect-results:
        steps:
          - run:
              name: Copy test reports
              command: |
                ./gradlew collectResults
              when: always
          - store_artifacts:
              path: build/test-output
          - store_test_results:
              path: build/test-output
      commit-push:
        parameters:
          update_type:
            type: string
        steps:
          - run: "git add ."
          - run: "git config user.email \"robert.f.murdock@gmail.com\""
          - run: "git config user.name \"CircleCI in a RoB Suit\""
          - run: "git commit -m 'Automatic <<parameters.update_type>> update.' || echo 'Ignoring no changes'"
          - run: "git push"
jobs:
  build:
    executor: coupling-orb/standard
    steps:
      - checkout
      - restore_cache:
          key: coupling-cache-51-{{ .Branch }}
      - coupling-orb/setup
      - save_cache:
          key: coupling-cache-51-{{ .Branch }}
          paths:
            - "~/.gradle"
            - "~/.cache"
            - ".gradle"
            - "client/.gradle"
            - "node_modules"
            - "/root/.konan"
      - run: "./gradlew build"
      - run: "./gradlew check release"
      - coupling-orb/collect-results
      - persist_to_workspace:
          root: ./
          paths:
            - "*"
  deploy-prod:
    docker:
      - image: openjdk:13-jdk
    steps:
      - attach_workspace:
          at: ./
      - restore_cache:
          key: coupling-cache-51-{{ .Branch }}
      - setup_remote_docker
      - run: "./gradlew buildProductionImage pushProductionImage"
  notify-aws:
    docker:
      - image: mikesir87/aws-cli
    environment:
      AWS_DEFAULT_REGION: us-east-1
      AWS_PAGER: ""
    steps:
      - run: "aws ecs update-service --service Coupling-service --force-new-deployment --no-paginate"
  update-client:
    executor: coupling-orb/standard
    steps:
      - checkout
      - restore_cache:
          key: coupling-cache-51-{{ .Branch }}
      - run: "./gradlew updateDependencies -PpackageJson=client/package.json"
      - coupling-orb/setup
      - run: "./gradlew build"
      - run: "./gradlew check"
      - coupling-orb/collect-results
      - coupling-orb/commit-push:
          update_type: client dependency
  update-server:
    executor: coupling-orb/standard
    steps:
      - checkout
      - restore_cache:
          key: coupling-cache-51-{{ .Branch }}
      - run: "./gradlew updateDependencies -PpackageJson=server/package.json"
      - run: "./gradlew updateDependencies -PpackageJson=e2e/package.json"
      - coupling-orb/setup
      - run: "./gradlew build"
      - run: "./gradlew check"
      - coupling-orb/collect-results
      - coupling-orb/commit-push:
          update_type: server dependency
  update-gradle-deps:
    executor: coupling-orb/standard
    steps:
      - checkout
      - restore_cache:
          key: coupling-cache-51-{{ .Branch }}
      - run: "./gradlew useLatestVersions"
      - coupling-orb/setup
      - run: "./gradlew build"
      - run: "./gradlew check"
      - coupling-orb/collect-results
      - coupling-orb/commit-push:
          update_type: gradle dependency
workflows:
  version: 2
  build-deploy:
    jobs:
      - build
      - deploy-prod:
          requires:
            - build
          filters:
            branches:
              only: master
      - notify-aws:
          requires:
            - deploy-prod
  update-client:
    triggers:
      - schedule:
          cron: "0 16 * * *"
          filters:
            branches:
              only:
                - master
    jobs:
      - update-client
  update-server:
    triggers:
      - schedule:
          cron: "0 15 * * *"
          filters:
            branches:
              only:
                - master
    jobs:
      - update-server
  update-gradle-deps:
    triggers:
      - schedule:
          cron: "0 17 * * *"
          filters:
            branches:
              only:
                - master
    jobs:
      - update-gradle-deps
