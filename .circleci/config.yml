version: 2.1

orbs:
  coupling-orb:
    executors:
      standard:
        docker:
          - image: circleci/openjdk:9-jdk
          - image: circleci/mongo:latest
          - image: amazon/dynamodb-local
            command: -Xmx1G -jar DynamoDBLocal.jar -inMemory
          - image: selenium/standalone-chrome
      nomongo:
        docker:
          - image: circleci/openjdk:9-jdk
          - image: amazon/dynamodb-local
            command: -Xmx1G -jar DynamoDBLocal.jar -inMemory
          - image: selenium/standalone-chrome
      noservices:
        docker:
          - image: circleci/openjdk:9-jdk
    commands:
      setup:
        steps:
          - run: "./gradlew kotlinNodeJsSetup"
          - run: "./gradlew packageJson testPackageJson jsEndpointTestPackageJson endToEndTestPackageJson kotlinNpmInstall"
          - run: "./gradlew yarn"
      collect-results:
        steps:
          - run:
              name: Copy test results
              command: |
                mkdir -p build/test-output/junit/
                find . -type f -regex ".*/build/test-results/.*xml" -exec cp {} build/test-output/junit/{} \;
              when: always
          - run:
              name: Copy test reports
              command: |
                ./gradlew copyReportsToCircleCIDirectory
              when: always
          - store_artifacts:
              path: build/test-output
          - store_test_results:
              path: build/test-output
      commit-push:
        parameters:
          update_type:
            type: string
        steps:
          - run: "git add ."
          - run: "git config user.email \"robert.f.murdock@gmail.com\""
          - run: "git config user.name \"CircleCI in a RoB Suit\""
          - run: "git commit -m 'Automatic <<parameters.update_type>> update.' || echo 'Ignoring no changes'"
          - run: "git push"
jobs:
  build:
    executor: coupling-orb/nomongo
    environment:
      SELENIUM_ADDRESS: http://localhost:4444/wd/hub
      JAVA_TOOL_OPTIONS: -XX:MaxRAM=2g
      GRADLE_OPTS: -XX:+HeapDumpOnOutOfMemoryError
      COUPLING_IN_MEMORY: true
    steps:
      - attach_workspace:
          at: ./
      - run: "./gradlew build check -x :repository:mongo:check"
      - coupling-orb/collect-results
      - persist_to_workspace:
          root: ./
          paths:
            - "*"
  justsetup:
    executor: coupling-orb/noservices
    environment:
      JAVA_TOOL_OPTIONS: -XX:MaxRAM=2g
      GRADLE_OPTS: -XX:+HeapDumpOnOutOfMemoryError
    steps:
      - checkout
      - restore_cache:
          key: coupling-cache-39-{{ .Branch }}
      - coupling-orb/setup
      - save_cache:
          key: coupling-cache-39-{{ .Branch }}
          paths:
            - "~/.gradle"
            - ".gradle"
            - "client/.gradle"
            - "node_modules"
            - "/root/.konan"
      - persist_to_workspace:
          root: ./
          paths:
            - "*"
  buildMongo:
    docker:
      - image: circleci/openjdk:9-jdk
      - image: circleci/mongo:latest
    steps:
      - checkout
      - run: "./gradlew :repository:mongo:check --no-parallel -Dorg.gradle.configureondemand=false"
      - coupling-orb/collect-results
  deploy-prod:
    docker:
      - image: openjdk:13-jdk
    steps:
      - attach_workspace:
          at: ./
      - restore_cache:
          key: coupling-cache-39-{{ .Branch }}
      - setup_remote_docker
      - run: "./gradlew buildProductionImage pushProductionImage"
  notify-aws:
    docker:
      - image: mikesir87/aws-cli
    environment:
      AWS_DEFAULT_REGION: us-east-1
      AWS_PAGER: ""
    steps:
      - run: "aws ecs update-service --service Coupling-service --force-new-deployment --no-paginate"
  update-client:
    executor: coupling-orb/standard
    environment:
      SELENIUM_ADDRESS: http://localhost:4444/wd/hub
      JAVA_TOOL_OPTIONS: -XX:MaxRAM=2g
      GRADLE_OPTS: -XX:+HeapDumpOnOutOfMemoryError
      COUPLING_IN_MEMORY: true
    steps:
      - checkout
      - restore_cache:
          key: coupling-cache-39-{{ .Branch }}
      - run: "./gradlew :client:updateDependencies"
      - coupling-orb/setup
      - run: "./gradlew assemble"
      - run: "./gradlew build check --no-parallel"
      - coupling-orb/collect-results
      - coupling-orb/commit-push:
          update_type: client dependency
  update-server:
    executor: coupling-orb/nomongo
    environment:
      SELENIUM_ADDRESS: http://localhost:4444/wd/hub
      JAVA_TOOL_OPTIONS: -XX:MaxRAM=2g
      GRADLE_OPTS: -XX:+HeapDumpOnOutOfMemoryError
      COUPLING_IN_MEMORY: true
    steps:
      - checkout
      - restore_cache:
          key: coupling-cache-39-{{ .Branch }}
      - run: "./gradlew :server:updateDependencies"
      - coupling-orb/setup
      - run: "./gradlew assemble"
      - run: "./gradlew build check"
      - coupling-orb/collect-results
      - coupling-orb/commit-push:
          update_type: server dependency
  update-gradle-deps:
    executor: coupling-orb/nomongo
    environment:
      SELENIUM_ADDRESS: http://localhost:4444/wd/hub
      JAVA_TOOL_OPTIONS: -XX:MaxRAM=2g
      GRADLE_OPTS: -XX:+HeapDumpOnOutOfMemoryError
      COUPLING_IN_MEMORY: true
    steps:
      - checkout
      - restore_cache:
          key: coupling-cache-39-{{ .Branch }}
      - run: "./gradlew useLatestVersions"
      - coupling-orb/setup
      - run: "./gradlew assemble"
      - run: "./gradlew build check"
      - coupling-orb/collect-results
      - coupling-orb/commit-push:
          update_type: gradle dependency
workflows:
  version: 2
  build-deploy:
    jobs:
      - justsetup
      - build:
          requires:
            - justsetup
      - buildMongo
      - deploy-prod:
          requires:
            - build
            - buildMongo
          filters:
            branches:
              only: master
      - notify-aws:
          requires:
            - deploy-prod
  update-client:
    triggers:
      - schedule:
          cron: "0 16 * * *"
          filters:
            branches:
              only:
                - master
    jobs:
      - update-client
  update-server:
    triggers:
      - schedule:
          cron: "0 15 * * *"
          filters:
            branches:
              only:
                - master
    jobs:
      - update-server
  update-gradle-deps:
    triggers:
      - schedule:
          cron: "0 17 * * *"
          filters:
            branches:
              only:
                - master
    jobs:
      - update-gradle-deps
