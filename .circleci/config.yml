version: 2.1

orbs:
  aws-cli: circleci/aws-cli@2.0.2
  coupling-orb:
    orbs:
      browser-tools: circleci/browser-tools@1.1.0
    executors:
      standard:
        machine:
          image: ubuntu-2004:202104-01
          docker_layer_caching: true
        environment:
          COUPLING_IN_MEMORY: "true"
          SKIP_MONGO_TESTS: "true"
          GRADLE_OPTS: -XX:+HeapDumpOnOutOfMemoryError
          AWS_DEFAULT_REGION: us-east-1
    commands:
      setup:
        steps:
          - run: |
              set +e
              curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.5/install.sh | bash
              export NVM_DIR="/opt/circleci/.nvm"
              [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
              nvm install node
              nvm alias default node

              echo 'export NVM_DIR="/opt/circleci/.nvm"' >> $BASH_ENV
              echo "[ -s \"$NVM_DIR/nvm.sh\" ] && . \"$NVM_DIR/nvm.sh\"" >> $BASH_ENV
          - browser-tools/install-chrome
          - browser-tools/install-chromedriver
          - run:
              name: Add hostnames
              command: |
                sudo tee -a /etc/hosts \<<<'127.0.0.1 static.localhost socket.localhost'
                cat /etc/hosts
          - restore_cache:
                key: coupling-cache-8-{{ .Branch }}
      collect-results:
        steps:
          - save_cache:
                key: coupling-cache-8-{{ .Branch }}
                paths:
                  - "~/.gradle"
          - run:
              name: Copy test reports
              command: |
                ./gradlew composeLogs collectResults
              when: always
          - store_artifacts:
              path: build/test-output
          - store_test_results:
              path: build/test-output
jobs:
  build:
    executor: coupling-orb/standard
    environment:
      AWS_DEFAULT_REGION: us-east-1
    steps:
      - checkout
      - coupling-orb/setup
      - aws-cli/setup
      - run: "./gradlew release build"
      - coupling-orb/collect-results
workflows:
  version: 2
  build-deploy:
    jobs:
      - build
