name: Build
on:
  push:
    branches:
      - '**'
    tags-ignore:
      - '**'
jobs:
  build-job:
    name: "Build"
    runs-on: ubuntu-latest
    concurrency:
      group: ${{ github.ref }}
    env:
      COUPLING_IN_MEMORY: "true"
      AUTH0_CLIENT_SECRET: ${{ secrets.AUTH0_CLIENT_SECRET }}
      COUPLING_ALT_TEST_PASSWORD: ${{ secrets.COUPLING_ALT_TEST_PASSWORD }}
      COUPLING_E2E_TEST_PASSWORD: ${{ secrets.COUPLING_E2E_TEST_PASSWORD }}
      COUPLING_PRIMARY_TEST_PASSWORD: ${{ secrets.COUPLING_PRIMARY_TEST_PASSWORD }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      GRGIT_USER: ${{ secrets.COUPLING_PAT }}
    steps:
      - run: echo '127.0.0.1 static.localhost socket.localhost' | sudo tee -a /etc/hosts
      - uses: browser-actions/setup-chrome@latest
        with:
          chrome-version: stable
      - run: chrome --version
      - run: sudo rm /usr/bin/google-chrome && sudo ln -s $(which chrome) /usr/bin/google-chrome
      - run: which chrome
      - run: which google-chrome
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
        with:
          cache-read-only: ${{ github.ref != 'refs/heads/master' }}
      - name: Log in to the Container registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: testspace-com/setup-testspace@v1
        with:
          domain: robertfmurdock
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: us-east-1
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      - name: Calculate Version
        run: ./gradlew calculateVersion -q --configuration-cache
      - name: Build Coupling
        run: ./gradlew release check --scan --info -Pversion=$(./gradlew calculateVersion --configuration-cache -q)
      - name: Collect Results
        if: ${{ always() }}
        run: ./gradlew composeLogs collectResults
      - uses: actions/upload-artifact@v2
        if: ${{ always() }}
        with:
          name: test-output
          path: |
            build/test-output/
      - name: Push result to Testspace server
        if: always()
        run: |
          testspace $(find . -path *test-results* -name *.xml)
