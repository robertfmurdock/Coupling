name: Build
on:
  push:
    branches:
      - '**'
    tags-ignore:
      - '**'
permissions:
  id-token: write
  contents: write
jobs:
  build-job:
    name: "Build"
    runs-on: ubuntu-latest
    concurrency:
      group: ${{ github.ref }}
    env:
      COUPLING_IN_MEMORY: "true"
      AUTH0_CLIENT_SECRET: ${{ secrets.AUTH0_CLIENT_SECRET }}
      COUPLING_ALT_TEST_PASSWORD: ${{ secrets.COUPLING_ALT_TEST_PASSWORD }}
      COUPLING_E2E_TEST_PASSWORD: ${{ secrets.COUPLING_E2E_TEST_PASSWORD }}
      COUPLING_PRIMARY_TEST_PASSWORD: ${{ secrets.COUPLING_PRIMARY_TEST_PASSWORD }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      GRGIT_USER: ${{ secrets.GITHUB_TOKEN }}
      S3_BUILD_CACHE_ACCESS_KEY_ID: ${{ secrets.S3_BUILD_CACHE_ACCESS_KEY_ID }}
      S3_BUILD_CACHE_SECRET_KEY: ${{ secrets.S3_BUILD_CACHE_SECRET_KEY }}
      COUPLING_CLI_ACCESS_TOKEN: ${{ secrets.COUPLING_API_PARTY_SECRET }}
    steps:
      - run: echo '127.0.0.1 static.localhost socket.localhost' | sudo tee -a /etc/hosts
      - uses: browser-actions/setup-chrome@latest
        with:
          chrome-version: stable
      - run: sudo rm /usr/bin/google-chrome && sudo ln -s $(which chrome) /usr/bin/google-chrome
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'
      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
        with:
          cache-read-only: ${{ github.ref != 'refs/heads/master' }}
      - name: Log in to the Container registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Configure AWS credentials (Deploy)
        uses: aws-actions/configure-aws-credentials@v2
        if: ${{ github.ref == 'refs/heads/master' }}
        with:
          role-to-assume: arn:aws:iam::174159267544:role/CouplingDeploy
          aws-region: us-east-1
      - name: Configure AWS credentials (Local)
        uses: aws-actions/configure-aws-credentials@v2
        if: ${{ github.ref != 'refs/heads/master' }}
        with:
          role-to-assume: arn:aws:iam::174159267544:role/LocalDevelopment
          aws-region: us-east-1
      - name: Add home environment variable
        run: echo "HOME=$(echo ~)" >> $GITHUB_ENV
      - name: Create Caddy Directory to avoid permissions problems
        run: mkdir -p ~/caddy_data
      - name: Setup users for Docker
        run: |-
          echo "UID=$(id -u)" >> $GITHUB_ENV &&
          echo "GID=$(id -g)" >> $GITHUB_ENV
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: testspace-com/setup-testspace@v1
        with:
          domain: robertfmurdock
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          cache: 'yarn'
          cache-dependency-path: |
            kotlin-js-store/yarn.lock
      - name: Generate Version ðŸ§®
        run: ./gradlew calculateVersion -PexportToGithub=true --scan
      - name: Build + Release Coupling
        run: ./gradlew release check -Pversion=${{ env.TAGGER_VERSION }} --no-configuration-cache --scan
      - name: Update Contributions
        if: ${{ github.ref == 'refs/heads/master' }}
        run: |-
          ./gradlew :currentContributionData
          ./gradlew :cli:installDist
          cat build/digger/current.json | ./cli/build/install/cli/bin/cli party contribution --party-id 9df8b8ef-f10f-4b75-bde1-d691c148378c save
      - name: Collect Results
        if: ${{ always() }}
        run: ./gradlew :composeLogs collectResults
      - uses: actions/upload-artifact@v2
        if: ${{ always() }}
        with:
          name: test-output
          path: |
            build/test-output/
      - name: Push result to Testspace server
        if: always()
        run: |
          testspace $(find . -path *test-results* -name *.xml)
