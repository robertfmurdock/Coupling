type PartyRecord {
    id: String!
    name: String
    email: String
    pairingRule: Int
    badgesEnabled: Boolean
    defaultBadgeName: String
    alternateBadgeName: String
    callSignsEnabled: Boolean
    animationsEnabled: Boolean
    animationSpeed: Float
    modifyingUserEmail: String
    timestamp: String
    isDeleted: Boolean
}

type User {
    id: String!
    email: String!
    authorizedPartyIds: [String]!
}

type Pin {
    id: String!
    icon: String
    name: String
}

type PinRecord {
    id: String!
    icon: String
    name: String
    partyId: String
    modifyingUserEmail: String
    timestamp: String
    isDeleted: Boolean
}

type PlayerRecord {
    id: String!
    name: String
    email: String
    badge: String
    callSignAdjective: String
    callSignNoun: String
    imageURL: String
    avatarType: String
    partyId: String
    modifyingUserEmail: String
    timestamp: String
    isDeleted: Boolean
}

type PinnedPlayer {
    id: String!
    name: String
    email: String
    badge: String
    avatarType: String
    callSignAdjective: String
    callSignNoun: String
    imageURL: String
    pins: [Pin]!
}

type PinnedPair {
    players: [PinnedPlayer]
    pins: [Pin]
}

type PairAssignmentDocumentRecord {
    id: String!
    date: String!
    pairs: [PinnedPair]!
    partyId: String
    modifyingUserEmail: String
    timestamp: String
    isDeleted: Boolean
}

type PartyData {
    id: String!
    party: PartyRecord
    pinList: [PinRecord]
    playerList: [PlayerRecord]
    retiredPlayers: [PlayerRecord]
    pairAssignmentDocumentList: [PairAssignmentDocumentRecord]
    currentPairAssignmentDocument: PairAssignmentDocumentRecord
}

input PlayerInput {
    id: String!
    name: String
    email: String
    badge: String
    callSignAdjective: String
    callSignNoun: String
    imageURL: String
    avatarType: String
}

input PinInput {
    id: String!
    icon: String
    name: String
}

input SpinInput {
    partyId: String!
    players: [PlayerInput]!
    pins: [PinInput]!
}

type SpinOutput {
    result: PairAssignmentDocumentRecord!
}

input DeletePartyInput {
    partyId: String!
}
input DeletePinInput {
    partyId: String!
    pinId: String!
}

input DeletePlayerInput {
    partyId: String!
    playerId: String!
}

input DeletePairAssignmentsInput {
    partyId: String!
    pairAssignmentsId: String!
}

input SavePinInput {
    partyId: String!
    pinId: String
    icon: String
    name: String
}

input SavePartyInput {
    partyId: String!
    name: String
    email: String
    pairingRule: Int
    badgesEnabled: Boolean
    defaultBadgeName: String
    alternateBadgeName: String
    callSignsEnabled: Boolean
    animationsEnabled: Boolean
    animationSpeed: Float
}

input SavePlayerInput {
    partyId: String!
    playerId: String!
    name: String
    email: String
    badge: String
    callSignAdjective: String
    callSignNoun: String
    imageURL: String
    avatarType: String
}

input SavePairAssignmentsInput {
    partyId: String
    pairAssignmentsId: String!
    date: String!
    pairs: [PinnedPairInput]!
}

input PinnedPairInput {
    players: [PinnedPlayerInput]!
    pins: [PinInput]!
}

input PinnedPlayerInput {
    id: String!
    name: String
    email: String
    badge: String
    callSignAdjective: String
    callSignNoun: String
    imageURL: String
    avatarType: String
    pins: [PinInput]!
}

"""
All Queries and Mutations are subject to change. If you want to program an integration that depends on the Graph being stable, please open an issue on the [the github page](https://www.github.com/robertfmurdock/coupling), so we can plan accordingly. :)
"""
type Query {
    partyList: [PartyRecord]
    partyData(id: String!): PartyData
    user: User
}

"""
All Queries and Mutations are subject to change. If you want to program an integration that depends on the Graph being stable, please open an issue on the [the github page](https://www.github.com/robertfmurdock/coupling), so we can plan accordingly. :)
"""
type Mutation {
    spin(input: SpinInput!): SpinOutput!
    saveParty(input: SavePartyInput!): Boolean
    deleteParty(input: DeletePartyInput!): Boolean
    savePin(input: SavePinInput!): Boolean
    deletePin(input: DeletePinInput!): Boolean
    savePlayer(input: SavePlayerInput!): Boolean
    deletePlayer(input: DeletePlayerInput!): Boolean
    savePairAssignments(input: SavePairAssignmentsInput!): Boolean
    deletePairAssignments(input: DeletePairAssignmentsInput!): Boolean
}
