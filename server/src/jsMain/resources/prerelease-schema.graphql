type User {
    id: ID!
    boost: BoostDetails
    subscription: SubscriptionDetails
}

type BoostDetails {
    userId: ID!
}

type SubscriptionDetails {
    stripeCustomerId: String
    stripeSubscriptionId: String
    isActive: Boolean!
    currentPeriodEnd: String
}

input SaveBoostInput {
    partyIds: [ID]!
}

type Mutation {
    saveBoost(input: SaveBoostInput!): Boolean
    deleteBoost: Boolean
}

type Query { _: String }

type Configuration {
    stripeAdminCode: String
    stripePurchaseCode: String
}

type Pair {
    commits: [Commit!]
}

type Commit {
    id: ID!
    instant: String!
    ease: Int
    story: String
}