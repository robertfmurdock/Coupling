type PartyDetails {
    id: String!
    name: String
    email: String
    pairingRule: Int
    badgesEnabled: Boolean
    defaultBadgeName: String
    alternateBadgeName: String
    callSignsEnabled: Boolean
    animationsEnabled: Boolean
    animationSpeed: Float
    modifyingUserEmail: String
    timestamp: String
    isDeleted: Boolean
}

type PartyIntegration {
    slackTeam: String
    slackChannel: String
    modifyingUserEmail: String
    timestamp: String
    isDeleted: Boolean
}

type User {
    id: String!
    email: String!
    authorizedPartyIds: [String]!
}

type Pin {
    id: String!
    icon: String
    name: String
}

type PinDetails {
    id: String!
    icon: String
    name: String
    partyId: String
    modifyingUserEmail: String
    timestamp: String
    isDeleted: Boolean
}

type PlayerDetails {
    id: String!
    name: String
    email: String
    badge: String
    callSignAdjective: String
    callSignNoun: String
    imageURL: String
    avatarType: String
    partyId: String
    modifyingUserEmail: String
    timestamp: String
    isDeleted: Boolean
}

type PinnedPlayer {
    id: String!
    name: String
    email: String
    badge: String
    avatarType: String
    callSignAdjective: String
    callSignNoun: String
    imageURL: String
    pins: [Pin]!
}

type PinnedPair {
    players: [PinnedPlayer]
    pins: [Pin]
}

type PairAssignmentDocumentDetails {
    id: String!
    partyId: String
    date: String!
    pairs: [PinnedPair]!
    discordMessageId: String
    slackMessageId: String
    modifyingUserEmail: String
    timestamp: String
    isDeleted: Boolean
}

type PartySecret {
    id: String!
    partyId: String
    modifyingUserEmail: String
    timestamp: String
    isDeleted: Boolean
}

type Party {
    id: String!
    details: PartyDetails
    integration: PartyIntegration
    pinList: [PinDetails]
    playerList: [PlayerDetails]
    retiredPlayers: [PlayerDetails]
    pairAssignmentDocumentList: [PairAssignmentDocumentDetails]
    secretList: [PartySecret]
    currentPairAssignmentDocument: PairAssignmentDocumentDetails
}

input PlayerInput {
    id: String!
    name: String
    email: String
    badge: String
    callSignAdjective: String
    callSignNoun: String
    imageURL: String
    avatarType: String
}

input PinInput {
    id: String!
    icon: String
    name: String
}

input SpinInput {
    partyId: String!
    playerIds: [String]!
    pinIds: [String]!
}

type SpinOutput {
    result: PairAssignmentDocumentDetails!
}

input DeletePartyInput {
    partyId: String!
}
input DeletePinInput {
    partyId: String!
    pinId: String!
}

input DeletePlayerInput {
    partyId: String!
    playerId: String!
}

input DeletePairAssignmentsInput {
    partyId: String!
    pairAssignmentsId: String!
}

input SavePinInput {
    partyId: String!
    pinId: String
    icon: String
    name: String
}

input SaveSlackIntegrationInput {
    partyId: String
    team: String
    channel: String
}

input SavePartyInput {
    partyId: String!
    name: String
    email: String
    pairingRule: Int
    badgesEnabled: Boolean
    defaultBadgeName: String
    alternateBadgeName: String
    callSignsEnabled: Boolean
    animationsEnabled: Boolean
    animationSpeed: Float
}

input SavePlayerInput {
    partyId: String!
    playerId: String!
    name: String
    email: String
    badge: String
    callSignAdjective: String
    callSignNoun: String
    imageURL: String
    avatarType: String
}

input SavePairAssignmentsInput {
    partyId: String
    pairAssignmentsId: String!
    date: String!
    pairs: [PinnedPairInput]!
    discordMessageId: String
    slackMessageId: String
}

input PinnedPairInput {
    players: [PinnedPlayerInput]!
    pins: [PinInput]!
}

input PinnedPlayerInput {
    id: String!
    name: String
    email: String
    badge: String
    callSignAdjective: String
    callSignNoun: String
    imageURL: String
    avatarType: String
    pins: [PinInput]!
}

type GlobalStats {
    parties: [PartyStats]!
    totalParties: Int!,
    totalPlayers: Int!,
    totalAppliedPins: Int!,
    totalUniquePins: Int!,
    totalSpins: Int!,
}

type PartyStats {
    name: String!
    id: String!
    playerCount: Int!
    appliedPinCount: Int!
    uniquePinCount: Int!
    spins: Int!
    medianSpinDuration: String
    medianSpinDurationMillis: String
}

input GlobalStatsInput {
    year: Int
}

input PartyInput {
    partyId: String!
}

"""
All Queries and Mutations are subject to change. If you want to program an integration that depends on the Graph being stable, please open an issue on the [the github page](https://www.github.com/robertfmurdock/coupling), so we can plan accordingly. :)
"""
type Query {
    partyList: [PartyDetails]
    party(input: PartyInput!): Party
    user: User
    globalStats(input: GlobalStatsInput!) : GlobalStats!
    addToSlackUrl: String
}

"""
All Queries and Mutations are subject to change. If you want to program an integration that depends on the Graph being stable, please open an issue on the [the github page](https://www.github.com/robertfmurdock/coupling), so we can plan accordingly. :)
"""
type Mutation {
    spin(input: SpinInput!): Boolean
    saveParty(input: SavePartyInput!): Boolean
    deleteParty(input: DeletePartyInput!): Boolean
    saveSlackIntegration(input: SaveSlackIntegrationInput!): Boolean
    savePin(input: SavePinInput!): Boolean
    deletePin(input: DeletePinInput!): Boolean
    savePlayer(input: SavePlayerInput!): Boolean
    deletePlayer(input: DeletePlayerInput!): Boolean
    savePairAssignments(input: SavePairAssignmentsInput!): Boolean
    deletePairAssignments(input: DeletePairAssignmentsInput!): Boolean
    createSecret(input: CreateSecretInput!) : SecretToken
    deleteSecret(input: DeleteSecretInput!) : Boolean
    grantSlackAccess(input: GrantSlackAccessInput!): Boolean
    grantDiscordAccess(input: GrantDiscordAccessInput!): Boolean
}

input GrantSlackAccessInput {
    code: String!
    state: String!
}

input GrantDiscordAccessInput {
    code: String!
    partyId: String!
    guildId: String!
}

input CreateSecretInput {
    partyId: String!
}

type SecretToken {
    secretId: String!
    secretToken: String!
}

input DeleteSecretInput {
    partyId: String!
    secretId: String!
}
